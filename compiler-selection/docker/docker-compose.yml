version: '3.6'
volumes:
  exec_data:
services:
  # database for nisq-analyzer, qc-atlas and pattern-atlas
  # each container has it's own database, generated by the db image
  db:
    build:
      context: ./db
    image: quantil-db
    environment:
      # specifies user:pw for each container
      POSTGRES_USERS: 'planqk:planqk|nisq:nisq|qprov:qprov'
      # specifies db name for each container
      POSTGRES_DATABASES: 'planqk:planqk|nisq:nisq|qprov:qprov'
      ATLAS_DB: planqk
      NISQ_DB: nisq
      QPROV_DB: qprov
    #volumes:
      # use this volume to save the postgres data
      # - ./postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - default
  qc-atlas-ui:
    image: planqk/qc-atlas-ui:v1.0.0
    environment:
      # because the requests are performed from the browser and not
      # from the container itself we have to specify localhost here
      # and **not** the container name
      QC_ATLAS_HOST_NAME: localhost
      QC_ATLAS_PORT: 8080
      PATTERN_ATLAS_HOST_NAME: localhost
      PATTERN_ATLAS_PORT: 8082
      NISQ_ANALYZER_HOST_NAME: localhost
      NISQ_ANALYZER_PORT: 8081
    ports:
      - '80:80'
    networks:
      - default
  qc-atlas:
    image: planqk/atlas:v1.1.0
    environment:
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: planqk
      POSTGRES_PASSWORD: planqk
      POSTGRES_DB: planqk
    ports:
      - "8080:8080"
    networks:
      - default
  nisq-analyzer:
    image: planqk/nisq-analyzer:v1.0.0
    environment:
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: nisq
      POSTGRES_PASSWORD: nisq
      POSTGRES_DB: nisq
      NISQ_HOSTNAME: qiskit-service
      NISQ_PORT: 5000
      NISQ_VERSION: v1.0
    ports:
     - '8081:8080'
    networks:
     - default
  qprov:
    image: planqk/qprov:latest
    environment:
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: qprov
      POSTGRES_PASSWORD: qprov
      POSTGRES_DB: qprov
    ports:
      - "8084:8080"
    networks:
      - default
  qprov-collector-ibm:
    image: planqk/qprov-collector:latest
    environment:
      POSTGRES_HOSTNAME: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: qprov
      POSTGRES_PASSWORD: qprov
      POSTGRES_DB: qprov
      QPROV_IBMQ_TOKEN: ''
      QPROV_IBMQ_EXECUTE_CIRCUITS: 'false'
      QPROV_IBMQ_AUTO_COLLECT: 'true'
      QPROV_IBMQ_AUTO_COLLECT_INTERVAL: 60
      QPROV_IBMQ_AUTO_COLLECT_INTERVAL_CIRCUITS: 180
      QISKIT_SERVICE_HOSTNAME: qiskit-service
      QISKIT_SERVICE_PORT: 5000
    ports:
      - "8085:8080"
    networks:
      - default

  # used by nisq analyzer for execution and transpilation
  qiskit-service:
    image: planqk/qiskit-service:v1.0.0
    command: sh /app/startup.sh
    ports:
      - "5000:5000"
    environment:
      - REDIS_URL=redis://redis
      - DATABASE_URL=sqlite:////data/app.db
    volumes:
      - exec_data:/data
    networks:
      - default

  qiskit-rq-worker:
    image: planqk/qiskit-service:v1.0.0
    command: rq worker --url redis://redis qiskit-service_execute
    environment:
      - REDIS_URL=redis://redis
      - DATABASE_URL=sqlite:////data/app.db
    volumes:
      - exec_data:/data
    depends_on:
      - redis

  forest-service:
    image: planqk/forest-service:latest
    command: sh /app/startup.sh
    ports:
      - "5002:5000"
    environment:
      - REDIS_URL=redis://redis
      - DATABASE_URL=sqlite:////data/app.db
      - QVM_HOSTNAME=rigetti-qvm
      - QVM_PORT=5666
      - QUILC_HOSTNAME=rigetti-quilc
      - QUILC_PORT=5667
    volumes:
      - exec_data:/data
    networks:
      - default

  forest-rq-worker:
    image: planqk/forest-service:latest
    command: rq worker --url redis://redis forest-service_execute
    environment:
      - REDIS_URL=redis://redis
      - DATABASE_URL=sqlite:////data/app.db
      - QVM_HOSTNAME=rigetti-qvm
      - QVM_PORT=5666
      - QUILC_HOSTNAME=rigetti-quilc
      - QUILC_PORT=5667
    volumes:
      - exec_data:/data
    depends_on:
      - redis
    networks:
      - default

  pytket-service:
    image: planqk/pytket-service:latest
    command: sh /app/startup.sh
    ports:
      - "5001:5000"
    environment:
      - REDIS_URL=redis://redis
      - DATABASE_URL=sqlite:////data/app.db
      - QVM_HOSTNAME=rigetti-qvm
      - QVM_PORT=5666
    volumes:
      - exec_data:/data
    networks:
      - default

  pytket-rq-worker:
    image: planqk/pytket-service:latest
    command: rq worker --url redis://redis pytket-service_execute
    environment:
      - REDIS_URL=redis://redis
      - DATABASE_URL=sqlite:////data/app.db
      - QVM_HOSTNAME=rigetti-qvm
      - QVM_PORT=5666
    volumes:
      - exec_data:/data
    depends_on:
      - redis
    networks:
      - default

  rigetti-qvm:
    image: rigetti/qvm
    ports:
      - "5666:5666"
    command: -S -p 5666
    networks:
      - default

  rigetti-quilc:
    image: rigetti/quilc
    ports:
      - "5667:5667"
    command: -S -p 5667
    networks:
      - default

  # redis server for qiskit/forest/pytket service
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - default

networks:
  default:
    driver: bridge
